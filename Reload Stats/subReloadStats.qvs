// Reload Stats
// UnqualifyAllFields unqualifies all fields used by this script to avoid qualify issues.
Sub UnqualifyAllFields

	UNQUALIFY [%ReloadStats.Stage1]
            , [%ReloadStats.Stage2]
            , [%ReloadStats.Stage3]
            , [%ReloadStats.Stage4]
			, [%ReloadStats.StageNo]
			, [%ReloadStats.Start]
			, [%ReloadStats.End]
			, [%ReloadStats.Duration]
			, [%ReloadStats.InProgress]
	;

End Sub

// SetupLog sets everything up so the other functions can be used
// SetupLog is called at the end of this file. You can remove the last line
//   and call it yourself at will.
// E.g.: CALL SetupLog;
Sub SetupLog(ReloadStats_QVDPath,ReloadStats_QVDName)

	// Path plus name plus timestamp plus QVD
	LET vReloadStats_QVDName = '$(ReloadStats_QVDPath)/' & timestamp(now(),'YYYYMMDD-hhmmss') & ' $(ReloadStats_QVDName).qvd';

	CALL UnqualifyAllFields;

	// Create Log Tables
	ReloadStats:
	LOAD * INLINE [
		%ReloadStats.Stage1, %ReloadStats.Stage2, %ReloadStats.Stage3, %ReloadStats.Stage4, %ReloadStats.StageNo, %ReloadStats.Start, %ReloadStats.End, %ReloadStats.Duration, %ReloadStats.InProgress
	];

	TRACE ;

End Sub


// StartLog records the begining of a section
// It needs an argument in the form of a string with the name of the section.
// E.g.: CALL StartLog('Calendar');
Sub StartLog(ReloadStats_StageName1,ReloadStats_StageName2,ReloadStats_StageName3,ReloadStats_StageName4)

	CALL UnqualifyAllFields;

	// Module Log Initiate
	CONCATENATE(ReloadStats)
	LOAD
		'$(ReloadStats_StageName1)'		AS [%ReloadStats.Stage1]
	  , '$(ReloadStats_StageName2)'		AS [%ReloadStats.Stage2]
	  , '$(ReloadStats_StageName3)'		AS [%ReloadStats.Stage3]
	  , '$(ReloadStats_StageName4)'		AS [%ReloadStats.Stage4]
	  , RowNo()							AS [%ReloadStats.StageNo]
	  , Timestamp(Now())				AS [%ReloadStats.Start]
	  , 1								AS [%ReloadStats.InProgress]
	AUTOGENERATE(1);

	// Store the in progress data
	CALL StoreQVD;

End Sub


// StopLog records the end of a section
// It needs an argument in the form of a string with the name of the section.
// The section name should match the name provided in the StartLog function.
// E.g.: CALL StopLog('Calendar');
Sub StopLog(ReloadStats_StageName1,ReloadStats_StageName2,ReloadStats_StageName3,ReloadStats_StageName4)

	CALL UnqualifyAllFields;

	// Module Log End
	ReloadStats_Temp:
	Noconcatenate LOAD
		[%ReloadStats.Stage1]
      , [%ReloadStats.Stage2]
      , [%ReloadStats.Stage3]
      , [%ReloadStats.Stage4]
	  , [%ReloadStats.StageNo]
	  , [%ReloadStats.Start]
	  , 0														AS [%ReloadStats.InProgress]
	  , if([%ReloadStats.Stage1] = '$(ReloadStats_StageName1)'
      	AND [%ReloadStats.Stage2] = '$(ReloadStats_StageName2)'
      	AND [%ReloadStats.Stage3] = '$(ReloadStats_StageName3)'
      	AND [%ReloadStats.Stage4] = '$(ReloadStats_StageName4)',
		  	Timestamp(Now()),
			  [%ReloadStats.End])								AS [%ReloadStats.End]
	  , if([%ReloadStats.Stage1] = '$(ReloadStats_StageName1)'
      	AND [%ReloadStats.Stage2] = '$(ReloadStats_StageName2)'
     	AND [%ReloadStats.Stage3] = '$(ReloadStats_StageName3)'
      	AND [%ReloadStats.Stage4] = '$(ReloadStats_StageName4)',
		  	Interval(Timestamp(Now()) - [%ReloadStats.Start]),
			 [%ReloadStats.Duration]) 							AS [%ReloadStats.Duration]
	RESIDENT ReloadStats;

	Drop Table ReloadStats;
	Rename Table ReloadStats_Temp to ReloadStats;

	// Log module duration after it finished
    LET vReloadStatsDuration = peek('%ReloadStats.Duration',-1,'ReloadStats');
	TRACE [$(ReloadStats_StageName1)]-[$(ReloadStats_StageName2)]-[$(ReloadStats_StageName3)]-[$(ReloadStats_StageName4)] took $(vReloadStatsDuration);

	// Store the in progress data
	CALL StoreQVD;

End Sub


// CleanupLog should be called at the very end of the load script
// This step is important
// E.g.: CALL CleanupLog;
Sub CleanupLog

	// Store the final data
	CALL StoreQVD;

	// Reset any used variables
	LET vReloadStatsDuration = null();
	LET vReloadStats_QVDName = null();

End Sub

Sub StoreQVD
	// Store out if QVD defined
	if len('$(vReloadStats_QVDName)')>0 then
		STORE [ReloadStats] into [$(vReloadStats_QVDName)] (qvd);
	end if
End Sub

// Delete this line if you want to call SetupLog manually.
// CALL SetupLog;